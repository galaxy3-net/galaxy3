#!/usr/bin/env bash

set -eE

trap "die \$LINENO \$BASH_COMMAND" ERR

function state () {
  #echo $(VBoxManage showvminfo "${boxname}" | egrep '^State:' | awk '{print $2}' || echo 'Dead')
  echo $(vagrant status --machine-readable | awk -F, '$3=="state" { print $4 }')
}

function vbox_dir () {
  echo $(VBoxManage list systemproperties | egrep '^Default machine folder' | sed 's/^Default machine folder://' |\
  sed 's/^[ ]*//')
}


function dir_exists () {
  ls -d "${VBOX_DIR}/${boxname}" || return
  cat <<__EOD__

  While Vagrant's machine state is "not_created", the "${VBOX_DIR}/${boxname}"
  directory already exists

  1) Confirm that the box ${boxname} is not already running in Virtualbox.
     a) If it is running, it will need to be removed along with the directory and files from
        Virtualbox before continuing.
  2) If there is no ${boxname} already running in Virtualbox.
     a) Rename "${VBOX_DIR}/${boxname}"
     or
     b) Remove "${VBOX_DIR}/${boxname}"

__EOD__
  exit 1
}

function info () {
  printf "\n\t%s" "${1}"
}


function git_clone () {
  info "Cloning Repository ${VAGRANT_DIR} from ${GIT_REPO}\n\n"
  info "git clone --branch ${GIT_BRANCH} ${GIT_REPO} ${VAGRANT_DIR}\n\n"
  git clone --branch ${GIT_BRANCH} ${GIT_REPO} ${VAGRANT_DIR}
  git_update
}

function git_update () {
  info "Pulling update from branch ${GIT_BRANCH} to ${VAGRANT_DIR}"

  git status
  git branch
  git pull -ff

  get_inventory
  get_ansible_requirements
}

function manage_plugins () {
  info "Checking Vagrant Plugins & Updating Them"
  vagrant plugin update
  plugins=(vagrant-vbguest micromachine vagrant-disksize)
  for plugin in ${plugins[@]}
  do
    info "Vagrant - checking plugin - ${plugin}"
    vagrant plugin list | egrep "${plugin}" || vagrant plugin install ${plugin}
  done

}

function get_inventory () {
  info "Pulling latest inventory file"
  curl -sL -o ${G3HOME}/vagrant/${boxname}/hosts https://armory.galaxy3.net/vagrant/pkgs/files/etc/ansible/hosts
}

function get_ansible_requirements () {
  info "Pulling the latest Ansible Requirements File"
  curl -sL -o ${G3HOME}/vagrant/${boxname}/requirements.yml https://armory.galaxy3.net/vagrant/pkgs/files/etc/ansible/requirements.yml
}

function die () {
    info "Error: line - ${1} command - ${2}"
    exit 1
}

info "Source G3 Common"
. $(dirname ${0})/g3common

export boxname=$(basename ${0}) && info "boxname is set to ${boxname}"
info ""
which VBoxManage || export PATH=/c/Program\ Files/Oracle/VirtualBox:${PATH}

[ "${VBOX_DIR:-notset}" == "notset" ] && export VBOX_DIR="$(vbox_dir)/${boxname}"
info "VBOX_DIR is set to ${VBOX_DIR}"

BASE_BOX="$(expr ${boxname} : '\(.[^-]*\)[-]*.*')" || BASE_BOX="error"
info "BASE_BOX=${BASE_BOX}"
ENV_NAME="$(expr ${boxname} : '.[^-]*[-]*\(.*\)')" || ENV_NAME=""
info "ENV_NAME=${ENV_NAME}"
export GIT_BRANCH="${BASE_BOX}" && info "GIT_BRANCH=${GIT_BRANCH}"
export VAGRANT_DIR="${G3HOME}/vagrant/${BASE_BOX}/${ENV_NAME}" && info "VAGRANT_DIR=${VAGRANT_DIR}"
export GIT_REPO="${GIT_HUB}/${BASE_BOX}.git" && info "GIT_REPO=${GIT_REPO}"

cat <<__EOD__

  Default Virtualbox VM Directory: ${VBOX_DIR}

  - - ${boxname} ${*} - -

__EOD__

cd "${VAGRANT_DIR}" || git_clone
cd "${VAGRANT_DIR}" || die "${VAGRANT_DIR} directory does not exist"
info "Confirming VirtualBox Installation . . . "
which VBoxManage || info " Not Installed\n\nAborting . . ."

case "${1}" in

  "up" | "resume" | "reload")  manage_plugins && git_update && vagrant ${*}
        stat ./post_deploy.sh && sh ./post_deploy.sh
    ;;

   *)  vagrant ${*}
       ;;
esac

exit 0
